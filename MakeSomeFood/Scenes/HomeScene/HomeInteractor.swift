//
//  HomeInteractor.swift
//  MakeSomeFood
//
//  Created by Aleksandr Kretov on 14.02.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeBusinessLogic {
    func viewDidLoad()
}

protocol HomeDataStore {
    var recipieResponse: RecipeResponse? { get set }
}

class HomeInteractor: HomeBusinessLogic, HomeDataStore {

    // MARK: - Public properties

    var presenter: HomePresentationLogic?

    // MARK: - Public properties

    var recipieResponse: RecipeResponse?

    // MARK: - Private properties

    private let networkService: NetworkService

    // MARK: - Initializers

    init(networkService: NetworkService) {
        self.networkService = networkService
    }

    // MARK: Interaction Logic

    func viewDidLoad() {
        networkService.fetchRecipies { [unowned self] result in
            switch result {
            case .success(let success):
                self.recipieResponse = success
                let response = Home.LoadRandomRecipies.Response(recipeRespone: success)
                presenter?.presentRandomRecipies(response: response)
            case .failure(let failure):
                let response = Home.HandleError.Response(error: failure)
                presenter?.presentError(response: response)
            }
        }
    }
}
